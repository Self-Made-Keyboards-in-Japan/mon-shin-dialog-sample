(()=>{"use strict";var __webpack_modules__={702:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("\n// UNUSED EXPORTS: checkDiscordLimit, generateKeyboardList, generatePostText, linkNameToQuestionaire, linkProblemAndTextbox, setupClipboardJS, splitKeyboardLinked, updateContent\n\n;// CONCATENATED MODULE: ./src/js/locale/ja/nameToQuestionaireJP.js\n//------------------------------------------------------------------------------------------\n// 各 DOM の Name 属性と投稿文で使う質問の関連付け\n//-----------------------------------------------------------------------------------------\nvar nameToQuestionaireJP_nameToQuestionaireJP = new Map([// buildProblem.html\n['noInputTextarea', '入力できないキーがある'], ['notExpectTextarea', '設定と異なる入力となるキーがある'], ['notActionOneHand', '左右分離型で片方だけ反応しない'], ['replaceConnectSide', '左右どちら側を繋いでも症状は同じですか'], ['connectOnlyOneHand', '左側（右側）だけ接続した場合、左側（右側）のキーボードとして適切に動作しますか'], ['ledOffTextarea', '点灯しない LED がある'], ['trackballDeviceProblemTextarea', 'トラックボールやロータリーエンコーダーの問題'], ['otherBuildProblemTextarea', '上記以外の問題（ランドが剥がれた etc）が起きている'], ['keyboardName', 'キーボード名'], ['buildGuideURL', 'ビルドガイドのURL'], ['kicadFileURL', 'KiCadファイルのURL'], // _microcomputerInfo.html\n['microcontroller', 'マイコンの種類'], ['microcontrollerName', 'マイコン名'], // _firmwareInfo.html\n['firmware', 'ファームウェアの種類'], ['firmwareName', 'ファームウェア名'], ['writingTool', '書き込み方法'], ['writingToolName', 'その他の書き込み方法'], // _otherInfo.html\n['detailWork', 'これまでに行った作業の内容'], ['informationReferredTo', '参考にした情報（ビルドガイド除く）'], ['testMicrocomputerOnly', 'マイコンボードだけを PC に接続したらキーボードとして認識されますか？'], ['haveTester', 'テスターを持っていますか？'], // firmwareProblem.html\n['firmwareProblem', 'ファームウェアのトラブルの内容'], ['osName', 'OS 名'], ['osVerAndDirtriInput', 'OS のバージョン or ディストリビューション']]);\n\n;// CONCATENATED MODULE: ./src/js/locale/en/nameToQuestionaireEN.js\n//------------------------------------------------------------------------------------------\n// 各 DOM の Name 属性と投稿文で使う質問の関連付け\n//-----------------------------------------------------------------------------------------\nvar nameToQuestionaireEN_nameToQuestionaireEN = new Map([// buildProblem.html\n[\"noInputTextarea\", \"Description of not react key.\"], [\"notExpectTextarea\", \"Description of diffrent action key from settings\"], ['notActionOneHand', 'One side keyboard isn\\'t react. (split keyboard)'], ['replaceConnectSide', 'Does the same problem occur whether the left or right side is connected?'], ['connectOnlyOneHand', 'If only the left side (right side) is connected, does it work properly as a left side (right side) keyboard?'], ['ledOffTextarea', 'Description of not light up LED'], ['trackballDeviceProblemTextarea', 'Description of happening trouble'], [\"otherBuildProblemTextarea\", \"Description of other Problem.\"], [\"keyboardName\", \"Keyboard Name\"], [\"buildGuideURL\", \"Official build guide URL\"], [\"kicadFileURL\", \"Kicad file URL\"], // _microcomputerInfo.html\n[\"microcontroller\", \"Microcomputer Name\"], [\"microcontrollerName\", \"Microcontroller Name\"], // _firmwareInfo.html\n['firmware', 'Type of Firmware'], ['firmwareName', 'Firmware Name'], [\"writingTool\", \"Firmware Writting Tool\"], [\"writingToolName\", \"Firmware Writting Tool Name\"], // _otherInfo.html\n[\"detailWork\", \"Description of work so far.\"], [\"informationReferredTo\", \"Referenced information (excluding build guide).\"], [\"testMicrocomputerOnly\", \"Detach microcontroller board from PCB. Next, if you connect microcontroller board to PC by USB connect, will os recognize board as keyboard?\"], [\"haveTester\", \"Do you have tester?\"], // firmwareProblem.html\n['firmwareProblem', 'Detail Firmware Trouble'], [\"osName\", \"OS\"], ['osVerAndDirtriInput', 'OS Version or OS Distribution']]);\n\n;// CONCATENATED MODULE: ./src/js/locale/ja/idToValueJP.js\n//------------------------------------------------------------------------------------------\n// 投稿文の生成に使う value を言語毎に切り替えるための Map オブジェクト\n//-----------------------------------------------------------------------------------------\nvar idToValueJP_idToValueJP = new Map([// buildProblem.html\n['notActionOneHand', '左右分離型で片方だけ反応しない'], // firmwareProblem.html\n['notSetupEnvironment', 'ファームウェアのビルド環境を構築できない'], ['notBuildFirmware', 'ファームウェアをビルドできない'], ['notWriteFirmware', 'ファームウェアを書き込めない'], // _firmwareInfo.html\n['otherFirmware', 'その他のファームウェア'], ['qmkCommandline', 'make コマンドでビルド＆書き込み'], ['otherMethod', 'その他のツール'], // _microcomputerInfo.html\n['atmega32u4', 'ATmega32U4を基板直付け'], ['atmega328', 'ATmega328を基板直付け'], ['rp2040', 'RP2040を基板直付け'], ['othersMicrocontroller', 'その他のマイコンを基板直付け']]);\n\n;// CONCATENATED MODULE: ./src/js/locale/en/idToValueEN.js\n//------------------------------------------------------------------------------------------\n// 投稿文の生成に使う value を言語毎に切り替えるための Map オブジェクト\n//-----------------------------------------------------------------------------------------\nvar idToValueEN_idToValueEN = new Map([// buildProblem.html\n['notActionOneHand', 'One side keyboard isn\\'t react. (split keyboard)'], // firmwareProblem.html\n['notSetupEnvironment', 'Can\\'t set up firmware building environment.'], ['notBuildFirmware', 'Can\\'t build firmware.'], ['notWriteFirmware', 'Can\\'t write firmware'], // _firmwareInfo.html\n['otherFirmware', 'Other firmware'], ['qmkCommandline', 'Use `qmk flash` for build & Write'], ['otherMethod', 'Other tool'], // _microcomputerInfo.html\n['atmega32u4', 'Mounting the ATmega32U4 directly on PCB'], ['atmega328', 'Mounting the ATmega328 directly on PCB'], ['rp2040', 'Mounting the RP2040 directly on PCB'], ['othersMicrocontroller', 'Mounting the other microcontroller directly on PCB']]);\n\n// EXTERNAL MODULE: ./node_modules/clipboard/dist/clipboard.min.js\nvar clipboard_min = __webpack_require__(901);\n// EXTERNAL MODULE: ./node_modules/i18next/dist/esm/i18next.js + 15 modules\nvar esm_i18next = __webpack_require__(580);\n;// CONCATENATED MODULE: ./src/js/common.js\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n //------------------------------------------------------------------------------------------\n// DOM の Name 属性と投稿文に使う質問文を結びつけた Map を返す\n//-----------------------------------------------------------------------------------------\n\nfunction linkNameToQuestionaire() {\n  var nameToQuestionaire = new Map();\n  var toggleBtn = document.getElementById('languageSwitch'); // 英語への翻訳はチェックボックスがチェックされているときに行う設計にしている\n\n  if (toggleBtn.checked) {\n    nameToQuestionaireEN.forEach(function (value, key) {\n      nameToQuestionaire.set(key, value);\n    });\n  } else if (!toggleBtn.checked) {\n    nameToQuestionaireJP.forEach(function (value, key) {\n      nameToQuestionaire.set(key, value);\n    });\n  }\n\n  return nameToQuestionaire;\n} //------------------------------------------------------------------------------------------\n// ラジオボックスの選択に合わせてテキストエリアなどの使用可否を切り替える\n//-----------------------------------------------------------------------------------------\n\nfunction linkProblemAndTextbox(e) {\n  switch (e.target.id) {\n    case 'noInput':\n    case 'notExpect':\n    case 'ledOff':\n    case 'trackballDeviceProblem':\n    case 'otherBuildProblem':\n      // 各問題の checkbox の data-relation-textarea には、関係する textarea の ID を格納している。\n      document.getElementById(e.target.dataset.relationTextarea).disabled = !e.target.checked;\n      break;\n\n    default:\n      break;\n  }\n\n  if (e.target.name === 'microcontroller') {\n    if (e.target.id === 'othersMicrocontroller') {\n      document.getElementById('microcontrollerNameInput').disabled = false;\n    } else {\n      document.getElementById('microcontrollerNameInput').disabled = true;\n    }\n  }\n\n  if (e.target.name === 'firmware') {\n    if (e.target.id === 'otherFirmware') {\n      document.getElementById('otherFirmwareInput').disabled = false;\n    } else {\n      document.getElementById('otherFirmwareInput').disabled = true;\n    }\n  }\n\n  if (e.target.name === 'writingTool') {\n    if (e.target.id === 'otherMethod') {\n      document.getElementById('otherMethodInput').disabled = false;\n    } else {\n      document.getElementById('otherMethodInput').disabled = true;\n    }\n  }\n} //------------------------------------------------------------------------------------------\n// フォームに入力されたデータから投稿文を生成する\n//-----------------------------------------------------------------------------------------\n\nfunction generatePostText(nameToQuestionaire) {\n  var form = document.getElementById(\"questionForm\");\n  var form_data = new FormData(form);\n  var postsText = document.getElementById(\"postsText\");\n  var ex = /\\n\\n$/gi;\n  var userText = '';\n  postsText.value = '';\n\n  var _iterator = _createForOfIteratorHelper(form_data.keys()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n\n      if (nameToQuestionaire.has(key)) {\n        userText = '__**' + nameToQuestionaire.get(key) + '**__\\n' + form_data.get(key);\n        postsText.value += userText + \"\\n\\n\";\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  postsText.value = postsText.value.replace(ex, '');\n  fixedTextBoxHeight(postsText);\n  checkDiscordLimit(postsText);\n} //------------------------------------------------------------------------------------------\n// 投稿文の行数に合わせてテキストボックスの高さを調整\n//------------------------------------------------------------------------------------------\n\nfunction fixedTextBoxHeight(postsText) {\n  if (postsText.scrollHeight > postsText.clientHeight) {\n    postsText.style.height = postsText.scrollHeight + \"px\";\n  }\n} //------------------------------------------------------------------------------------------\n// Discord の投稿欄の制限（文字数＋行数が2002になると貼付け不可）対策\n//-----------------------------------------------------------------------------------------\n\n\nfunction checkDiscordLimit(postsText) {\n  var character = postsText.value.length;\n  var lineBreak = (postsText.value.match(/\\n/g) || []).length;\n  var alertTextDiscord = document.getElementById('alertTextDiscord');\n  var copyBtn = document.getElementById('copyBtn');\n  var toggleBtn = document.getElementById('languageSwitch');\n  var charactersAndLines = document.getElementById('charactersAndLines');\n\n  if (character + lineBreak > 2001) {\n    alertTextDiscord.classList.remove('d-none');\n\n    if (toggleBtn.checked) {\n      alertTextDiscord.innerText = 'Limitation of Discord is \"character + line ≦ 2001\".';\n    } else if (!toggleBtn.checked) {\n      alertTextDiscord.innerText = 'Discord の投稿欄の制限は「文字数＋行数 ≦ 2001」です。';\n    }\n\n    copyBtn.disabled = true;\n  } else {\n    alertTextDiscord.classList.add('d-none');\n    copyBtn.disabled = false;\n  }\n\n  if (toggleBtn.checked) {\n    charactersAndLines.innerText = 'character + lines = ' + (character + lineBreak);\n  } else if (!toggleBtn.checked) {\n    charactersAndLines.innerText = '文字数＋行数 = ' + (character + lineBreak);\n  }\n} //------------------------------------------------------------------------------------------\n// キーボード名入力ボックスのオートコンプリート用のデータ登録\n//-----------------------------------------------------------------------------------------\n\nfunction generateKeyboardList() {\n  console.time('generateKeyboardList()');\n  var domKeyboardList = document.getElementById(\"keyboardList\");\n  fetch('https://api.qmk.fm/v1/keyboards').then(function (response) {\n    if (!response.ok) {\n      throw new Error('Response not success.');\n    }\n\n    return response.text();\n  }).then(function (data) {\n    var keyboardList = data.split(',');\n    return keyboardList;\n  }).then(function (keyboardList) {\n    var _iterator2 = _createForOfIteratorHelper(keyboardList),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var keyboard = _step2.value;\n        var option = document.createElement('option');\n        option.value = keyboard.replace(/\\\"/g, '');\n        domKeyboardList.appendChild(option);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    ;\n    console.info('Keyboard list generated.');\n  })[\"catch\"](function (error) {\n    return console.error('There has been a problem with your fetch operation:', error);\n  });\n  console.timeEnd('generateKeyboardList()');\n} //------------------------------------------------------------------------------------------\n// 左右分割型のキーボードの時だけ、左右分離型の質問を回答可能にする。\n// target.checked = false になるのは、一度チェックしてから解除した時だけ。\n//-----------------------------------------------------------------------------------------\n\nfunction splitKeyboardLinked(e) {\n  var replaceConnectSideYes = document.getElementById(\"replaceConnectSideYes\");\n  var replaceConnectSideNo = document.getElementById(\"replaceConnectSideNo\");\n  var connectOneHandOK = document.getElementById(\"connectOneHandOK\");\n  var connectOneHandNG = document.getElementById(\"connectOneHandNG\");\n\n  if (e.target.id == \"notActionOneHand\") {\n    if (e.target.checked) {\n      replaceConnectSideYes.disabled = false;\n      replaceConnectSideNo.disabled = false;\n      connectOneHandOK.disabled = false;\n      connectOneHandNG.disabled = false;\n    } else {\n      replaceConnectSideYes.disabled = true;\n      replaceConnectSideNo.disabled = true;\n      connectOneHandOK.disabled = true;\n      connectOneHandNG.disabled = true;\n    }\n  }\n} //------------------------------------------------------------------------------------------\n// clipboard.js\n//-----------------------------------------------------------------------------------------\n\nfunction setupClipboardJS() {\n  var clipboard = new ClipboardJS('#copyBtn');\n  var copyResult = document.getElementById('copyResult');\n  clipboard.on('success', function (e) {\n    copyResult.classList.remove('fadeout');\n    copyResult.classList.add('fadein');\n    copyResult.innerText = 'Copied!';\n    setTimeout(function () {\n      copyResult.classList.remove('fadein');\n      copyResult.classList.add('fadeout');\n    }, 2000);\n  });\n  clipboard.on('error', function (e) {\n    copyResult.classList.remove('fadeout');\n    copyResult.classList.add('fadein');\n    copyResult.innerText = 'Failed!';\n    setTimeout(function () {\n      copyResult.classList.remove('fadein');\n      copyResult.classList.add('fadeout');\n    }, 2000);\n  });\n} //------------------------------------------------------------------------------------------\n// i18next.js\n//-----------------------------------------------------------------------------------------\n\nfunction updateContent(e, enLocalesTranslationJson, jaLocalesTranslationJson) {\n  if (e.target.checked) {\n    Object.keys(enLocalesTranslationJson).forEach(function (key) {\n      if (document.getElementById(key)) {\n        i18next.changeLanguage('en').then(function (t) {\n          document.getElementById(key).innerText = t(key);\n        });\n      }\n    });\n    idToValueEN.forEach(function (value, key) {\n      if (document.getElementById(key)) {\n        document.getElementById(key).value = value;\n      }\n    });\n  } else {\n    Object.keys(jaLocalesTranslationJson).forEach(function (key) {\n      if (document.getElementById(key)) {\n        i18next.changeLanguage('ja').then(function (t) {\n          document.getElementById(key).innerText = t(key);\n        });\n      }\n    });\n    idToValueJP.forEach(function (value, key) {\n      if (document.getElementById(key)) {\n        document.getElementById(key).value = value;\n      }\n    });\n  }\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///702\n")}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var t=__webpack_module_cache__[Q];if(void 0!==t)return t.exports;var L=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(L.exports,L,L.exports,__webpack_require__),L.loaded=!0,L.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,t,L,F)=>{if(!t){var B=1/0;for(n=0;n<deferred.length;n++){for(var[t,L,F]=deferred[n],U=!0,e=0;e<t.length;e++)(!1&F||B>=F)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](t[e])))?t.splice(e--,1):(U=!1,F<B&&(B=F));if(U){deferred.splice(n--,1);var l=L();void 0!==l&&(Q=l)}}return Q}F=F||0;for(var n=deferred.length;n>0&&deferred[n-1][2]>F;n--)deferred[n]=deferred[n-1];deferred[n]=[t,L,F]},__webpack_require__.d=(Q,t)=>{for(var L in t)__webpack_require__.o(t,L)&&!__webpack_require__.o(Q,L)&&Object.defineProperty(Q,L,{enumerable:!0,get:t[L]})},__webpack_require__.o=(Q,t)=>Object.prototype.hasOwnProperty.call(Q,t),__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=592,(()=>{var Q={592:0};__webpack_require__.O.j=t=>0===Q[t];var t=(t,L)=>{var F,B,[U,e,l]=L,n=0;if(U.some((t=>0!==Q[t]))){for(F in e)__webpack_require__.o(e,F)&&(__webpack_require__.m[F]=e[F]);if(l)var c=l(__webpack_require__)}for(t&&t(L);n<U.length;n++)B=U[n],__webpack_require__.o(Q,B)&&Q[B]&&Q[B][0](),Q[B]=0;return __webpack_require__.O(c)},L=self.webpackChunkdocs=self.webpackChunkdocs||[];L.forEach(t.bind(null,0)),L.push=t.bind(null,L.push.bind(L))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(702)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();